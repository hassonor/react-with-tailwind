{"version":3,"sources":["components/Search.js","components/AddAppointment.js","components/AppointmentInfo.js","App.js","index.js"],"names":["DropDown","toggle","sortBy","onSortByChange","orderBy","onOrderByChange","className","role","onClick","Search","query","onQueryChange","useState","toggleSort","setToggleSort","htmlFor","type","name","id","value","onChange","event","target","placeholder","mySort","myOrder","AddAppointment","onSendAppointment","lastId","clearData","ownerName","petName","aptDate","aptTime","aptNotes","toggleForm","setToggleForm","formData","setFormData","rows","appointmentInfo","AppointmentInfo","appointment","onDeleteAppointment","App","appointmentList","setAppointmentList","setQuery","setSortBy","setOrderBy","filteredAppointment","filter","item","toLowerCase","includes","sort","a","b","order","fetchData","useCallback","fetch","then","response","json","data","catch","err","console","log","useEffect","myAppointment","reduce","max","Number","myQuery","map","appointmentId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAGMA,EAAW,SAAC,GAAgE,IAA/DC,EAA8D,EAA9DA,OAAQC,EAAsD,EAAtDA,OAAQC,EAA8C,EAA9CA,eAAgBC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,gBACxD,OAAIJ,EAIA,qBAAKK,UAAU,+GAAf,SAEI,sBAAKA,UAAU,OAAOC,KAAK,OAAO,mBAAiB,WAAW,kBAAgB,eAA9E,UACI,sBAAKC,QAAS,kBAAML,EAAe,YAC/BG,UAAU,4GACVC,KAAK,WAFT,sBAE0C,YAAXL,GAAyB,cAAC,IAAD,OACxD,sBAAKM,QAAS,kBAAML,EAAe,cAC/BG,UAAU,4GACVC,KAAK,WAFT,yBAE6C,cAAXL,GAA2B,cAAC,IAAD,OAC7D,sBAAKM,QAAS,kBAAML,EAAe,YAC/BG,UAAU,4GACVC,KAAK,WAFT,kBAEsC,YAAXL,GAAyB,cAAC,IAAD,OACpD,sBAAKM,QAAS,kBAAMH,EAAgB,QAChCC,UAAU,qIACVC,KAAK,WAFT,iBAEsC,QAAZH,GAAsB,cAAC,IAAD,OAChD,sBAAKI,QAAS,kBAAMH,EAAgB,SAChCC,UAAU,4GACVC,KAAK,WAFT,kBAEuC,SAAZH,GAAuB,cAAC,IAAD,YApBnD,MA0DAK,EAhCA,SAAC,GAA+E,IAA9EC,EAA6E,EAA7EA,MAAOC,EAAsE,EAAtEA,cAAeT,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,eAAgBC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACpE,EAAkCO,oBAAS,GAA3C,mBAAKC,EAAL,KAAiBC,EAAjB,KACA,OACI,qBAAKR,UAAU,OAAf,SACI,sBAAKA,UAAU,qCAAf,UACI,sBAAKA,UAAU,uEAAf,UACI,cAAC,IAAD,IACA,uBAAOS,QAAQ,QAAQT,UAAU,eAErC,uBAAOU,KAAK,OAAOC,KAAK,QAAQC,GAAG,QAAQC,MAAOT,EAC3CU,SAAU,SAACC,GAAUV,EAAcU,EAAMC,OAAOH,QAChDb,UAAU,wGAAwGiB,YAAY,WACrI,qBAAKjB,UAAU,+CAAf,SACI,gCACI,yBAAQU,KAAK,SAASR,QAAS,kBAAKM,GAAeD,IAC3CP,UAAU,2KAA2KY,GAAG,eAAe,gBAAc,OAAO,gBAAc,OADlP,qBAEY,cAAC,IAAD,CAAaZ,UAAU,YAEnC,cAAC,EAAD,CACIL,OAAQY,EACRX,OAAQA,EACRC,eAAgB,SAAAqB,GAAM,OAAIrB,EAAeqB,IACzCpB,QAASA,EACTC,gBAAiB,SAAAoB,GAAO,OAAIpB,EAAgBoB,iB,OCuEzDC,EA1HQ,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,kBAAmBC,EAAa,EAAbA,OAClCC,EAAY,CACdC,UAAW,GACXC,QAAS,GACTC,QAAS,GACTC,QAAS,GACTC,SAAU,IAEd,EAAkCtB,oBAAS,GAA3C,mBAAKuB,EAAL,KAAiBC,EAAjB,KACA,EAA8BxB,mBAASiB,GAAvC,mBAAKQ,EAAL,KAAeC,EAAf,KAeA,OACI,gCACI,wBAAQ9B,QAAS,WACb4B,GAAeD,IAEX7B,UAAS,8FACP6B,EAAa,eAAiB,cAJxC,SAKI,gCAAK,cAAC,IAAD,CAAgB7B,UAAU,gCAA/B,wBAGA6B,GACA,sBAAK7B,UAAU,qFAAf,UACI,sBAAKA,UAAU,0DAAf,UACI,uBAAOS,QAAQ,YAAYT,UAAU,2DAArC,wBAGA,qBAAKA,UAAU,6BAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,YAAYC,GAAG,YAChCE,SAAU,SAACC,GACPiB,EAAY,2BAAID,GAAL,IAAeP,UAAWT,EAAMC,OAAOH,UAEtDA,MAAOkB,EAASP,UAChBxB,UAAU,yIAIzB,sBAAKA,UAAU,0DAAf,UACI,uBAAOS,QAAQ,UAAUT,UAAU,2DAAnC,sBAGA,qBAAKA,UAAU,6BAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,UAAUC,GAAG,UAC9BE,SAAU,SAACC,GACPiB,EAAY,2BAAID,GAAL,IAAeN,QAASV,EAAMC,OAAOH,UAEpDA,MAAOkB,EAASN,QAChBzB,UAAU,yIAIzB,sBAAKA,UAAU,0DAAf,UACI,uBAAOS,QAAQ,UAAUT,UAAU,2DAAnC,sBAGA,qBAAKA,UAAU,6BAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,UAAUC,GAAG,UAC9BE,SAAU,SAACC,GACPiB,EAAY,2BAAID,GAAL,IAAeL,QAASX,EAAMC,OAAOH,UAEpDA,MAAOkB,EAASL,QAChB1B,UAAU,yIAIzB,sBAAKA,UAAU,0DAAf,UACI,uBAAOS,QAAQ,UAAUT,UAAU,2DAAnC,sBAGA,qBAAKA,UAAU,6BAAf,SACI,uBAAOU,KAAK,OAAOC,KAAK,UAAUC,GAAG,UAC9BE,SAAU,SAACC,GACPiB,EAAY,2BAAID,GAAL,IAAeJ,QAASZ,EAAMC,OAAOH,UAEpDA,MAAOkB,EAASJ,QAChB3B,UAAU,yIAIzB,sBAAKA,UAAU,0DAAf,UACI,uBAAOS,QAAQ,WAAWT,UAAU,2DAApC,+BAGA,qBAAKA,UAAU,6BAAf,SACZ,0BAAUY,GAAG,WAAWD,KAAK,WAAWsB,KAAK,IACnCjC,UAAU,kHACViB,YAAY,wCACZH,SAAU,SAACC,GACPiB,EAAY,2BAAID,GAAL,IAAeH,SAAUb,EAAMC,OAAOH,UAErDA,MAAOkB,EAASH,gBAIlB,qBAAK5B,UAAU,OAAf,SACI,qBAAKA,UAAU,mBAAf,SACI,wBAAQU,KAAK,SACLR,QAnGhC,WACI,IAAMgC,EAAkB,CACpBtB,GAAIU,EAAS,EACbE,UAAWO,EAASP,UACpBC,QAASM,EAASN,QAClBC,QAASK,EAASL,QAAU,IAAMK,EAASJ,QAC3CC,SAAUG,EAASH,UAEvBP,EAAkBa,GAClBF,EAAYT,GACZO,GAAeD,IA0Fa7B,UAAU,gOAFlB,+BC7FbmC,EAjBS,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,YAAaC,EAAwB,EAAxBA,oBAEnC,OAAS,qBAAIrC,UAAU,6BAAd,UACL,wBAAQE,QAAS,kBAAKmC,EAAoBD,EAAYxB,KAAKF,KAAK,SACxDV,UAAU,8IADlB,SAEI,cAAC,IAAD,MACJ,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,sBAAMA,UAAU,+CAAhB,SAAgEoC,EAAYX,UAC5E,sBAAMzB,UAAU,uBAAhB,SAAwCoC,EAAYV,aAExD,gCAAK,mBAAG1B,UAAU,0BAAb,oBAAkDoC,EAAYZ,aACnE,qBAAKxB,UAAU,gBAAf,SAAgCoC,EAAYR,kBCoDzCU,MA3Df,WACI,MAA4ChC,mBAAS,IAArD,mBAAKiC,EAAL,KAAsBC,EAAtB,KACA,EAAwBlC,mBAAS,IAAjC,mBAAKF,EAAL,KAAYqC,EAAZ,KACA,EAA0BnC,mBAAS,WAAnC,mBAAKV,EAAL,KAAa8C,EAAb,KACA,EAA4BpC,mBAAS,OAArC,mBAAKR,EAAL,KAAc6C,EAAd,KAEMC,EAAsBL,EAAgBM,QAAO,SAACC,GAChD,OACIA,EAAKrB,QAAQsB,cAAcC,SAAS5C,EAAM2C,gBAC1CD,EAAKtB,UAAUuB,cAAcC,SAAS5C,EAAM2C,gBAC5CD,EAAKlB,SAASmB,cAAcC,SAAS5C,EAAM2C,kBAEhDE,MAAK,SAACC,EAAGC,GACR,IAAIC,EAAqB,QAAZtD,EAAqB,GAAK,EACvC,OACIoD,EAAEtD,GAAQmD,cAAgBI,EAAEvD,GAAQmD,eAAiB,EAAIK,EAAQ,EAAIA,KAIvEC,EAAYC,uBAAY,WAC1BC,MAAM,eACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFnB,EAAmBmB,MAEtBC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC/B,IAMH,OAJAG,qBAAU,WACNX,MACD,CAACA,IAGA,sBAAKrD,UAAU,uCAAf,UACI,qBAAIA,UAAU,gBAAd,UAA8B,cAAC,IAAD,CAAYA,UAAU,8BAApD,uBACA,cAAC,EAAD,CAAgBqB,kBAAmB,SAAA4C,GAAa,OAAIzB,EAAmB,GAAD,mBAAKD,GAAL,CAAsB0B,MACxF3C,OAAQiB,EAAgB2B,QAAO,SAACC,EAAKrB,GAAN,OAAcsB,OAAOtB,EAAKlC,IAAMuD,EAAMC,OAAOtB,EAAKlC,IAAMuD,IAAK,KAChG,cAAC,EAAD,CAAQ/D,MAAOA,EACPC,cAAe,SAAAgE,GAAO,OAAI5B,EAAS4B,IACnCvE,QAASA,EACTC,gBAAiB,SAAAmB,GAAM,OAAIyB,EAAWzB,IACtCtB,OAAQA,EACRC,eAAgB,SAAAqB,GAAM,OAAIwB,EAAUxB,MAG5C,oBAAIlB,UAAU,2BAAd,SACK4C,EAAoB0B,KAAI,SAAAlC,GAAW,OAChC,cAAC,EAAD,CACiBA,YAAaA,EACbC,oBAAqB,SAAAkC,GAAa,OAC9B/B,EACID,EAAgBM,QAAO,SAAAT,GAAW,OAAIA,EAAYxB,KAAO2D,QAJ5DnC,EAAYxB,aChDtD4D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.8ce05365.chunk.js","sourcesContent":["import { BiSearch, BiCaretDown, BiCheck } from \"react-icons/bi\"\r\nimport {useState} from \"react\";\r\n\r\nconst DropDown = ({toggle, sortBy, onSortByChange, orderBy, onOrderByChange}) => {\r\n    if(!toggle) {\r\n        return null;\r\n    }\r\n    return (\r\n        <div className=\"origin-top-right absolute right-0 mt-2 w-56\r\n      rounded-md shadow-lg bg-white ring-1 ring-black ring-opacity-5\">\r\n            <div className=\"py-1\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"options-menu\">\r\n                <div onClick={() => onSortByChange('petName')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Pet Name {(sortBy === 'petName') && <BiCheck />}</div>\r\n                <div onClick={() => onSortByChange('ownerName')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Owner Name  {(sortBy === 'ownerName') && <BiCheck />}</div>\r\n                <div onClick={() => onSortByChange('aptDate')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Date {(sortBy === 'aptDate') && <BiCheck />}</div>\r\n                <div onClick={() => onOrderByChange('asc')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer border-gray-1 border-t-2\"\r\n                    role=\"menuitem\">Asc {(orderBy === 'asc') && <BiCheck />}</div>\r\n                <div onClick={() => onOrderByChange('desc')}\r\n                    className=\"px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 hover:text-gray-900 flex justify-between cursor-pointer\"\r\n                    role=\"menuitem\">Desc {(orderBy === 'desc') && <BiCheck />}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Search = ({query, onQueryChange, sortBy, onSortByChange, orderBy, onOrderByChange }) => {\r\n    let [toggleSort, setToggleSort] = useState(false);\r\n    return (\r\n        <div className=\"py-5\">\r\n            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                    <BiSearch />\r\n                    <label htmlFor=\"query\" className=\"sr-only\" />\r\n                </div>\r\n                <input type=\"text\" name=\"query\" id=\"query\" value={query}\r\n                       onChange={(event) =>{onQueryChange(event.target.value)}}\r\n                       className=\"pl-8 rounded-md focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300\" placeholder=\"Search\" />\r\n                <div className=\"absolute inset-y-0 right-0 flex items-center\">\r\n                    <div>\r\n                        <button type=\"button\" onClick={()=> setToggleSort(!toggleSort)}\r\n                                className=\"justify-center px-4 py-2 bg-blue-400 border-2 border-blue-400 text-sm text-white hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 flex items-center\" id=\"options-menu\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                            Sort By <BiCaretDown className=\"ml-2\" />\r\n                        </button>\r\n                        <DropDown\r\n                            toggle={toggleSort}\r\n                            sortBy={sortBy}\r\n                            onSortByChange={mySort => onSortByChange(mySort)}\r\n                            orderBy={orderBy}\r\n                            onOrderByChange={myOrder => onOrderByChange(myOrder)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search\r\n","import {BiCalendarPlus} from \"react-icons/bi\";\r\nimport {useState} from 'react';\r\n\r\nconst AddAppointment = ({onSendAppointment, lastId }) => {\r\n    const clearData = {\r\n        ownerName: '',\r\n        petName: '',\r\n        aptDate: '',\r\n        aptTime: '',\r\n        aptNotes: ''\r\n    }\r\n    let [toggleForm, setToggleForm] = useState(false);\r\n    let [formData, setFormData] = useState(clearData)\r\n\r\n    function formDataPublish() {\r\n        const appointmentInfo = {\r\n            id: lastId + 1,\r\n            ownerName: formData.ownerName,\r\n            petName: formData.petName,\r\n            aptDate: formData.aptDate + ' ' + formData.aptTime,\r\n            aptNotes: formData.aptNotes\r\n        }\r\n        onSendAppointment(appointmentInfo);\r\n        setFormData(clearData);\r\n        setToggleForm(!toggleForm);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => {\r\n                setToggleForm(!toggleForm)\r\n            }}\r\n                    className={`bg-blue-400 text-white px-2 py-3 w-full text-left rounded-t-md\r\n                    ${toggleForm ? 'rounded-t-md' : 'rounded-md'}`}>\r\n                <div><BiCalendarPlus className=\"inline-block align-text-top\"/> Add Appointment</div>\r\n            </button>\r\n            {\r\n                toggleForm &&\r\n                <div className=\"border-r-2 border-b-2 border-l-2 border-light-blue-500 rounded-b-md pl-4 pr-4 pb-4\">\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Owner Name\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"text\" name=\"ownerName\" id=\"ownerName\"\r\n                                   onChange={(event) => {\r\n                                       setFormData({...formData, ownerName: event.target.value})\r\n                                   }}\r\n                                   value={formData.ownerName}\r\n                                   className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"petName\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Pet Name\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"text\" name=\"petName\" id=\"petName\"\r\n                                   onChange={(event) => {\r\n                                       setFormData({...formData, petName: event.target.value})\r\n                                   }}\r\n                                   value={formData.petName}\r\n                                   className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"aptDate\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Apt Date\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"date\" name=\"aptDate\" id=\"aptDate\"\r\n                                   onChange={(event) => {\r\n                                       setFormData({...formData, aptDate: event.target.value})\r\n                                   }}\r\n                                   value={formData.aptDate}\r\n                                   className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"aptTime\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Apt Time\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n                            <input type=\"time\" name=\"aptTime\" id=\"aptTime\"\r\n                                   onChange={(event) => {\r\n                                       setFormData({...formData, aptTime: event.target.value})\r\n                                   }}\r\n                                   value={formData.aptTime}\r\n                                   className=\"max-w-lg block w-full shadow-sm focus:ring-indigo-500 focus:border-indigo-500 sm:max-w-xs sm:text-sm border-gray-300 rounded-md\"/>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"sm:grid sm:grid-cols-3 sm:gap-4 sm:items-start  sm:pt-5\">\r\n                        <label htmlFor=\"aptNotes\" className=\"block text-sm font-medium text-gray-700 sm:mt-px sm:pt-2\">\r\n                            Appointment Notes\r\n                        </label>\r\n                        <div className=\"mt-1 sm:mt-0 sm:col-span-2\">\r\n            <textarea id=\"aptNotes\" name=\"aptNotes\" rows=\"3\"\r\n                      className=\"shadow-sm focus:ring-indigo-500 focus:border-indigo-500 mt-1 block w-full sm:text-sm border-gray-300 rounded-md\"\r\n                      placeholder=\"Detailed comments about the condition\"\r\n                      onChange={(event) => {\r\n                          setFormData({...formData, aptNotes: event.target.value})\r\n                      }}\r\n                      value={formData.aptNotes}></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"pt-5\">\r\n                        <div className=\"flex justify-end\">\r\n                            <button type=\"submit\"\r\n                                    onClick={formDataPublish}\r\n                                    className=\"ml-3 inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-400 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-400\">\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddAppointment;\r\n","import {BiTrash} from \"react-icons/bi\";\r\n\r\nconst AppointmentInfo = ({appointment, onDeleteAppointment}) =>{\r\n\r\n    return ( <li className=\"px-3 py-3 flex items-start\">\r\n        <button onClick={()=> onDeleteAppointment(appointment.id)} type=\"button\"\r\n                className=\"p-1.5 mr-1.5 mt-1 rounded text-white bg-red-500 hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500\">\r\n            <BiTrash/></button>\r\n        <div className=\"flex-grow\">\r\n            <div className=\"flex items-center\">\r\n                <span className=\"flex-none font-medium text-2xl text-blue-500\">{appointment.petName}</span>\r\n                <span className=\"flex-grow text-right\">{appointment.aptDate}</span>\r\n            </div>\r\n            <div><b className=\"font-bold text-blue-500\">Owner:</b>{appointment.ownerName}</div>\r\n            <div className=\"leading-tight\">{appointment.aptNotes}</div>\r\n        </div>\r\n    </li>)\r\n}\r\n\r\nexport default AppointmentInfo;\r\n","import {useState, useEffect, useCallback} from \"react\";\nimport {BiCalendar} from \"react-icons/bi\";\nimport Search from \"./components/Search\";\nimport AddAppointment from \"./components/AddAppointment\";\nimport AppointmentInfo from \"./components/AppointmentInfo\";\n\n\nfunction App() {\n    let [appointmentList, setAppointmentList] = useState([]);\n    let [query, setQuery] = useState(\"\");\n    let [sortBy, setSortBy] = useState(\"petName\");\n    let [orderBy, setOrderBy] = useState(\"asc\");\n\n    const filteredAppointment = appointmentList.filter((item) => {\n        return (\n            item.petName.toLowerCase().includes(query.toLowerCase()) ||\n            item.ownerName.toLowerCase().includes(query.toLowerCase()) ||\n            item.aptNotes.toLowerCase().includes(query.toLowerCase())\n        )\n    }).sort((a, b) => {\n        let order = (orderBy === 'asc') ? 1 : -1;\n        return (\n            a[sortBy].toLowerCase() < b[sortBy].toLowerCase() ? -1 * order : 1 * order\n        )\n    })\n\n    const fetchData = useCallback(() => {\n        fetch('./data.json')\n            .then(response => response.json())\n            .then(data => {\n                setAppointmentList(data);\n            })\n            .catch(err => console.log(err));\n    }, []);\n\n    useEffect(() => {\n        fetchData();\n    }, [fetchData])\n\n    return (\n        <div className=\"App container mx-auto mt-3 font-thin\">\n            <h1 className=\"text-5xl mb-3\"><BiCalendar className=\"inline-block text-red-400\"/>Your Appointments</h1>\n            <AddAppointment onSendAppointment={myAppointment => setAppointmentList([...appointmentList, myAppointment]) }\n                lastId={appointmentList.reduce((max, item)=> Number(item.id) > max ? Number(item.id) : max, 0)}/>\n            <Search query={query}\n                    onQueryChange={myQuery => setQuery(myQuery)}\n                    orderBy={orderBy}\n                    onOrderByChange={mySort => setOrderBy(mySort)}\n                    sortBy={sortBy}\n                    onSortByChange={mySort => setSortBy(mySort)}\n            />\n\n            <ul className=\"divide-y divide-gray-200\">\n                {filteredAppointment.map(appointment => (\n                    <AppointmentInfo key={appointment.id}\n                                     appointment={appointment}\n                                     onDeleteAppointment={appointmentId =>\n                                         setAppointmentList(\n                                             appointmentList.filter(appointment => appointment.id !== appointmentId))}/>\n                ))\n                }\n            </ul>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}